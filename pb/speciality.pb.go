// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: pb/speciality.proto

package grabber

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetSpecialityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSpecialityRequest) Reset() {
	*x = GetSpecialityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_speciality_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpecialityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecialityRequest) ProtoMessage() {}

func (x *GetSpecialityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_speciality_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecialityRequest.ProtoReflect.Descriptor instead.
func (*GetSpecialityRequest) Descriptor() ([]byte, []int) {
	return file_pb_speciality_proto_rawDescGZIP(), []int{0}
}

func (x *GetSpecialityRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Speciality struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortName     string `protobuf:"bytes,2,opt,name=shortName,proto3" json:"shortName,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Code          string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	Qualification string `protobuf:"bytes,5,opt,name=qualification,proto3" json:"qualification,omitempty"`
	DivisionId    int32  `protobuf:"varint,6,opt,name=division_id,json=divisionId,proto3" json:"division_id,omitempty"`
	Division      string `protobuf:"bytes,7,opt,name=division,proto3" json:"division,omitempty"`
	FacultyId     int32  `protobuf:"varint,8,opt,name=faculty_id,json=facultyId,proto3" json:"faculty_id,omitempty"`
	Faculty       string `protobuf:"bytes,9,opt,name=faculty,proto3" json:"faculty,omitempty"`
}

func (x *Speciality) Reset() {
	*x = Speciality{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_speciality_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Speciality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Speciality) ProtoMessage() {}

func (x *Speciality) ProtoReflect() protoreflect.Message {
	mi := &file_pb_speciality_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Speciality.ProtoReflect.Descriptor instead.
func (*Speciality) Descriptor() ([]byte, []int) {
	return file_pb_speciality_proto_rawDescGZIP(), []int{1}
}

func (x *Speciality) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Speciality) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Speciality) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Speciality) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Speciality) GetQualification() string {
	if x != nil {
		return x.Qualification
	}
	return ""
}

func (x *Speciality) GetDivisionId() int32 {
	if x != nil {
		return x.DivisionId
	}
	return 0
}

func (x *Speciality) GetDivision() string {
	if x != nil {
		return x.Division
	}
	return ""
}

func (x *Speciality) GetFacultyId() int32 {
	if x != nil {
		return x.FacultyId
	}
	return 0
}

func (x *Speciality) GetFaculty() string {
	if x != nil {
		return x.Faculty
	}
	return ""
}

type ListSpecialitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSpecialitiesRequest) Reset() {
	*x = ListSpecialitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_speciality_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpecialitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpecialitiesRequest) ProtoMessage() {}

func (x *ListSpecialitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_speciality_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpecialitiesRequest.ProtoReflect.Descriptor instead.
func (*ListSpecialitiesRequest) Descriptor() ([]byte, []int) {
	return file_pb_speciality_proto_rawDescGZIP(), []int{2}
}

type ListFacultySpecialitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FacultyId int32 `protobuf:"varint,2,opt,name=faculty_id,json=facultyId,proto3" json:"faculty_id,omitempty"`
}

func (x *ListFacultySpecialitiesRequest) Reset() {
	*x = ListFacultySpecialitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_speciality_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFacultySpecialitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFacultySpecialitiesRequest) ProtoMessage() {}

func (x *ListFacultySpecialitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_speciality_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFacultySpecialitiesRequest.ProtoReflect.Descriptor instead.
func (*ListFacultySpecialitiesRequest) Descriptor() ([]byte, []int) {
	return file_pb_speciality_proto_rawDescGZIP(), []int{3}
}

func (x *ListFacultySpecialitiesRequest) GetFacultyId() int32 {
	if x != nil {
		return x.FacultyId
	}
	return 0
}

type ListSpecialitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Speciality `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListSpecialitiesResponse) Reset() {
	*x = ListSpecialitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_speciality_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpecialitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpecialitiesResponse) ProtoMessage() {}

func (x *ListSpecialitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_speciality_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpecialitiesResponse.ProtoReflect.Descriptor instead.
func (*ListSpecialitiesResponse) Descriptor() ([]byte, []int) {
	return file_pb_speciality_proto_rawDescGZIP(), []int{4}
}

func (x *ListSpecialitiesResponse) GetData() []*Speciality {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pb_speciality_proto protoreflect.FileDescriptor

var file_pb_speciality_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x62, 0x2f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x72, 0x61, 0x62, 0x62, 0x65, 0x72, 0x22, 0x26,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe, 0x01, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x71,
	0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x3f, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x61, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x61, 0x62, 0x62, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x9e, 0x02, 0x0a, 0x11, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x1d, 0x2e, 0x67, 0x72, 0x61, 0x62, 0x62, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13,
	0x2e, 0x67, 0x72, 0x61, 0x62, 0x62, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x61, 0x62,
	0x62, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72,
	0x61, 0x62, 0x62, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x67, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x67, 0x72,
	0x61, 0x62, 0x62, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x61, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x61, 0x62, 0x62, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pb_speciality_proto_rawDescOnce sync.Once
	file_pb_speciality_proto_rawDescData = file_pb_speciality_proto_rawDesc
)

func file_pb_speciality_proto_rawDescGZIP() []byte {
	file_pb_speciality_proto_rawDescOnce.Do(func() {
		file_pb_speciality_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_speciality_proto_rawDescData)
	})
	return file_pb_speciality_proto_rawDescData
}

var file_pb_speciality_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pb_speciality_proto_goTypes = []interface{}{
	(*GetSpecialityRequest)(nil),           // 0: grabber.GetSpecialityRequest
	(*Speciality)(nil),                     // 1: grabber.Speciality
	(*ListSpecialitiesRequest)(nil),        // 2: grabber.ListSpecialitiesRequest
	(*ListFacultySpecialitiesRequest)(nil), // 3: grabber.ListFacultySpecialitiesRequest
	(*ListSpecialitiesResponse)(nil),       // 4: grabber.ListSpecialitiesResponse
}
var file_pb_speciality_proto_depIdxs = []int32{
	1, // 0: grabber.ListSpecialitiesResponse.data:type_name -> grabber.Speciality
	0, // 1: grabber.SpecialityService.GetSpeciality:input_type -> grabber.GetSpecialityRequest
	2, // 2: grabber.SpecialityService.ListSpecialities:input_type -> grabber.ListSpecialitiesRequest
	3, // 3: grabber.SpecialityService.ListFacultySpecialities:input_type -> grabber.ListFacultySpecialitiesRequest
	1, // 4: grabber.SpecialityService.GetSpeciality:output_type -> grabber.Speciality
	4, // 5: grabber.SpecialityService.ListSpecialities:output_type -> grabber.ListSpecialitiesResponse
	4, // 6: grabber.SpecialityService.ListFacultySpecialities:output_type -> grabber.ListSpecialitiesResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pb_speciality_proto_init() }
func file_pb_speciality_proto_init() {
	if File_pb_speciality_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_speciality_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpecialityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_speciality_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Speciality); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_speciality_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpecialitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_speciality_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFacultySpecialitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_speciality_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpecialitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_speciality_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_speciality_proto_goTypes,
		DependencyIndexes: file_pb_speciality_proto_depIdxs,
		MessageInfos:      file_pb_speciality_proto_msgTypes,
	}.Build()
	File_pb_speciality_proto = out.File
	file_pb_speciality_proto_rawDesc = nil
	file_pb_speciality_proto_goTypes = nil
	file_pb_speciality_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SpecialityServiceClient is the client API for SpecialityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpecialityServiceClient interface {
	GetSpeciality(ctx context.Context, in *GetSpecialityRequest, opts ...grpc.CallOption) (*Speciality, error)
	ListSpecialities(ctx context.Context, in *ListSpecialitiesRequest, opts ...grpc.CallOption) (*ListSpecialitiesResponse, error)
	ListFacultySpecialities(ctx context.Context, in *ListFacultySpecialitiesRequest, opts ...grpc.CallOption) (*ListSpecialitiesResponse, error)
}

type specialityServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSpecialityServiceClient(cc grpc.ClientConnInterface) SpecialityServiceClient {
	return &specialityServiceClient{cc}
}

func (c *specialityServiceClient) GetSpeciality(ctx context.Context, in *GetSpecialityRequest, opts ...grpc.CallOption) (*Speciality, error) {
	out := new(Speciality)
	err := c.cc.Invoke(ctx, "/grabber.SpecialityService/GetSpeciality", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialityServiceClient) ListSpecialities(ctx context.Context, in *ListSpecialitiesRequest, opts ...grpc.CallOption) (*ListSpecialitiesResponse, error) {
	out := new(ListSpecialitiesResponse)
	err := c.cc.Invoke(ctx, "/grabber.SpecialityService/ListSpecialities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *specialityServiceClient) ListFacultySpecialities(ctx context.Context, in *ListFacultySpecialitiesRequest, opts ...grpc.CallOption) (*ListSpecialitiesResponse, error) {
	out := new(ListSpecialitiesResponse)
	err := c.cc.Invoke(ctx, "/grabber.SpecialityService/ListFacultySpecialities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SpecialityServiceServer is the server API for SpecialityService service.
type SpecialityServiceServer interface {
	GetSpeciality(context.Context, *GetSpecialityRequest) (*Speciality, error)
	ListSpecialities(context.Context, *ListSpecialitiesRequest) (*ListSpecialitiesResponse, error)
	ListFacultySpecialities(context.Context, *ListFacultySpecialitiesRequest) (*ListSpecialitiesResponse, error)
}

// UnimplementedSpecialityServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSpecialityServiceServer struct {
}

func (*UnimplementedSpecialityServiceServer) GetSpeciality(context.Context, *GetSpecialityRequest) (*Speciality, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpeciality not implemented")
}
func (*UnimplementedSpecialityServiceServer) ListSpecialities(context.Context, *ListSpecialitiesRequest) (*ListSpecialitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSpecialities not implemented")
}
func (*UnimplementedSpecialityServiceServer) ListFacultySpecialities(context.Context, *ListFacultySpecialitiesRequest) (*ListSpecialitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListFacultySpecialities not implemented")
}

func RegisterSpecialityServiceServer(s *grpc.Server, srv SpecialityServiceServer) {
	s.RegisterService(&_SpecialityService_serviceDesc, srv)
}

func _SpecialityService_GetSpeciality_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpecialityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialityServiceServer).GetSpeciality(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grabber.SpecialityService/GetSpeciality",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialityServiceServer).GetSpeciality(ctx, req.(*GetSpecialityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialityService_ListSpecialities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSpecialitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialityServiceServer).ListSpecialities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grabber.SpecialityService/ListSpecialities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialityServiceServer).ListSpecialities(ctx, req.(*ListSpecialitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpecialityService_ListFacultySpecialities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFacultySpecialitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpecialityServiceServer).ListFacultySpecialities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grabber.SpecialityService/ListFacultySpecialities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpecialityServiceServer).ListFacultySpecialities(ctx, req.(*ListFacultySpecialitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SpecialityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grabber.SpecialityService",
	HandlerType: (*SpecialityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSpeciality",
			Handler:    _SpecialityService_GetSpeciality_Handler,
		},
		{
			MethodName: "ListSpecialities",
			Handler:    _SpecialityService_ListSpecialities_Handler,
		},
		{
			MethodName: "ListFacultySpecialities",
			Handler:    _SpecialityService_ListFacultySpecialities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/speciality.proto",
}
